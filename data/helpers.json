[{"id":"1","category":["Массивы"],"name":"AddToArr","title":"Добавить элемент в одномерный массив","description":"Ф-ция добавляет element в 1 мерный массив arr","_keywords":"добавить элемент в массив\nadd element to array\nadd item to array\npush element to array\npush item to array","usage":"Sub Example()\n    Dim arr(): arr = Array(\"item1\", \"item2\")\n    Call AddToArr(arr, \"item3\")\n    Debug.Print(arr(2)) ' item3\nEnd Sub","file":"1.bas"},{"id":"2","category":["Массивы"],"name":"GetArrLength","title":"Получить длину массива","description":"Ф-ция возвращает длину массива arr","_keywords":"получить длину массива\nполучить количество элементов в массиве\nполучить количество элементов массива\nget array length\nget length of array\nget array size","usage":"Sub Example()\n    Dim arr(): arr = Array(\"item1\", \"item2\")\n    Debug.Print(GetArrLength(arr)) ' 2\nEnd Sub","file":"2.bas"},{"id":"3","category":["Конвертация","Массивы"],"name":"Rng2Array","title":"Получить одномерный массив с содержимым ячеек из диапазона","description":"Ф-ция возвращает 1 мерный массив, заполненный значениями из диапазона rng\nвсе значения приводятся к строке","_keywords":"конвертировать диапазон в массив\nконвертация диапазона в массив\nconvert range to array","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    Dim rng As Range: Set rng = ws.Range(\"A1:A10\")\n    Dim arr() As String: arr = Rng2Array(rng)\n    ' ... выполняем действия с массивом\n    ws.Range(\"A1\").Resize(Ubound(arr) + 1, 1) = Application.Transponse(arr)\nEnd Sub","file":"3.bas"},{"id":"4","category":["Массивы"],"name":"IsInArray","title":"Проверить наличие элемента в одномерном массиве","description":"Ф-ция проверяет наличие element в 1 мерном массиве arr","_keywords":"проверить наличие элемента в массиве\ncheck if element exist in array\ncheck if item exist in array\ncheck if array includes element\ncheck if array includes item","usage":"Sub Example()\n    Dim arr(): arr = Array(\"item1\", \"item2\")\n    Debug.Print(IsInArray(arr, \"item2\")) ' True\n    Debug.Print(IsInArray(arr, \"item3\")) ' False\nEnd Sub","file":"4.bas"},{"id":"5","category":["Массивы"],"name":"FilterArr","title":"Отфильтровать 1 или 2 мерный массив на соответствие переданному эелементу","description":"Ф-ция фильтрует 1 или 2 мерный массив\nвозвращает 1 мерный массив со всеми вхождениями element в arr","_keywords":"фильтрация массива\nотфильтровать массив\nfilter array","usage":"Sub Example()\n    Dim arr(), filteredArr()\n    arr = Array(1, 2, 3, 1, 1, 2)\n    ' фильтруем 1 мерный массив\n    filteredArr = FilterArr(arr, 1)\n    Debug.Print (Join(filteredArr, \", \")) ' 1, 1, 1\n\n    Dim ws As Worksheet, rng As Range\n    Set ws = ThisWorkbook.Sheets(1)\n    ' столбец B содержит цифры 1, 3, 1\n    Set rng = ws.Range(\"A1:B3\")\n    arr = rng\n    ' фильтруем 2-ой столбец 2 мерного массива (range)\n    filteredArr = FilterArr(arr, 1, 2)\n    Debug.Print (Join(filteredArr, \", \")) ' 1, 1\nEnd Sub","file":"5.bas"},{"id":"6","category":["Массивы"],"name":"FilterArr","title":"Отфильтровать одномерный массив с помощью ф-ции, которая будет проверять каждый эл-т","description":"Ф-ция фильтрует 1 или 2 мерный массив\nвозвращает 1 мерный массив со всеми вхождениями element в arr\nФ-ция с именем fnName будет вызвана с каждым эл-том массива arr в кач-ве единственного параметра\nесли ф-ция fnName возвращает True, element добавляется в результируюший массив","_keywords":"фильтрация массива с помощью функции\nотфильтровать массив через функцию\nfilter array with callback\nfilter array through callback\nfilter array using callback","usage":"Function TestItem(ByVal item) As Boolean\n    ' ф-ция для проверки эл-тов массива\n    ' отбирает цифрцы от 2 до 4\n    TestItem = CBool(item >= 2 And item <= 4)\nEnd Function\n\nSub Example()\n    Dim arr(), filteredArr()\n    arr = Array(1, 0, 1, 2, 4, 5, 10, 3, 1)\n    ' фильтруем 1 мерный массив\n    filteredArr = FilterArr(arr, \"TestItem\")\n    Debug.Print (Join(filteredArr, \", \")) ' 2, 4, 3\n\n    Dim ws As Worksheet, rng As Range\n    Set ws = ThisWorkbook.Sheets(1)\n    ' столбец B содержит цифры 1, 3, 1\n    Set rng = ws.Range(\"A1:B3\")\n    arr = rng\n    ' фильтруем 2-ой столбец 2 мерного массива (range)\n    filteredArr = FilterArr(arr, \"TestItem\", 2)\n    Debug.Print (Join(filteredArr, \", \")) ' 3\nEnd Sub","file":"6.bas"},{"id":"7","category":["Массивы"],"name":"FilterArr","title":"Отфильтровать многомерный массив","description":"Ф-ция фильтрует многомерный массив arr, используя массив критериев фильтрации args\nФормат критерия: номер столбца\" & \"=\" & \"искомое значение\", например, \"3=маска текста\"\nВозвращает двумерный массив с подходящими строками из массива arr","_keywords":"фильтрация массива\nотфильтровать массив\nfilter array","usage":"Sub Example()\n    Dim arr(), filteredArr(), count&\n    Dim ws As Worksheet, rng As Range\n    Set ws = ThisWorkbook.Sheets(1)\n    ' столбец A содержит имена: \"Иван\", \"Алексей\", \"Иван\"\n    ' столбец B содержит даты рождения: \"10.01.1992\", \"25.03.1991\", \"13.02.1994\"\n    Set rng = ws.Range(\"A1:B3\")\n    arr = rng\n    ' фильтруем 2 мерный массив (range)\n    ' хотим получить строки с Иванами, у которых ДР в январе\n    filteredArr = FilterArr(arr, \"1=Иван\", \"2=*.01.*\")\n    count = GetArrLength(filteredArr) ' @(id 2)\n    Debug.Print (count) ' 1 строка соответствует всем критериям\nEnd Sub","file":"7.bas"},{"id":"8","category":["Массивы"],"name":"SortArr","title":"Отсортировать одномерный массив пузырьком","description":"Ф-ция сортирует пузырьком 1 мерный массив arr\ndesc: по убыванию, от большего к меньшему (<)\n asc: по возрастанию, от меньшего к большему (>)","_keywords":"сортировка массива\nотсортировать массив\nsort array","usage":"Sub Example()\n    Dim arr(): arr = Array(-5, 3, 18, 1, 0, 4, 1, 5)\n    Dim isDesc As Boolean: isDesc = True\n     ' сортируем по убыванию 1 мерный массив\n    Call SortArr(arr, isDesc)\n    Debug.Print(Join(arr, \", \")) ' 18, 5, 4, 3, 1, 1, 0, -5\nEnd Sub","file":"8.bas"},{"id":"9","category":["Массивы"],"name":"SortArr","title":"Отсортировать 2-мерный массив пузырьком","description":"Ф-ция сортирует переданный 2 мерный массив по столбцу N\ndesc: по убыванию, от большего к меньшему (<)\nasc: по возрастанию, от меньшего к большему (>)","_keywords":"сортировка массива\nотсортировать массив\nsort array","usage":"Sub Example()\n    Dim arr()\n    Dim ws As Worksheet, rng As Range\n    Set ws = ThisWorkbook.Sheets(1)\n    ' столбец A содержит Имена студентов: \"Иван\", \"Алексей\", \"Петр\"\n    ' столбец B содержит Средний балл 4.4, 4.2, 4.3\n    Set rng = ws.Range(\"A1:B3\")\n    arr = rng\n    Dim isDesc As Boolean: isDesc = True\n    ' сортируем по убыванию 2 мерный массив (range) по 2 столбцу (ср. балл) \n    Call SortArr(arr, 2, isDesc)\n    ws.Range(\"A1\").Resize(UBound(arr, 1), UBound(arr, 2)).Value = arr\nEnd Sub","file":"9.bas"},{"id":"10","category":["Массивы"],"name":"GetUniqueArr","title":"Получить одномерный массив без дубликатов","description":"Ф-ция возвращает копию 1 мерного массива arr без повторов","_keywords":"получить массив без повторов\nполучить массив без дубликатов\nполучить массив без дублей\nget array without duplicates\nget unique array","usage":"Sub Example()\n    Dim arr(), uniqueArr()\n    arr = Array(1, 2, 3, 1, 1, 2)\n    ' фильтруем 1 мерный массив\n    uniqueArr = GetUniqueArr(arr)\n    Debug.Print (Join(uniqueArr, \", \")) ' 1, 2, 3\nEnd Sub","file":"10.bas"},{"id":"11","category":["Массивы"],"name":"GetIndexOf","title":"Получить индекс элемента в одномерном массиве","description":"Ф-ция возвращает индекс элемента в массиве arr или -1, если эл-та в массиве нет","_keywords":"найти индекс элемента в массиве\nполучить индекс элемента в массиве\nget element position in array\nget element index in array\nget position of element in array\nget index of element in array","usage":"Sub Example()\n    Dim arr(): arr = Array(1, 2, 3, 1, 1, 2)\n    Debug.Print (GetIndexOf(arr, 3)) ' 2\nEnd Sub","file":"11.bas"},{"id":"12","category":["Работа с книгами / листами"],"name":"IsWbOpen","title":"Проверить по имени открыта ли книга Excel","description":"Ф-ция проверяет открыта ли Excel книга по ее имени","_keywords":"проверить открыта ли книга\nпроверить открыт ли файл\ncheck if workbook open\ncheck if file open","usage":"Sub Example()\n    Debug.Print (IsWbOpen(\"data.xlsx\")) ' True, если такая книга открыта\nEnd Sub","file":"12.bas"},{"id":"13","category":["Работа с книгами / листами"],"name":"IsWsExists","title":"Проверить по имени листа существует ли он в книге Excel","description":"Ф-ция проверяет наличие листа в Excel книге по его имени","_keywords":"проверить существует ли вкладка\nпроверить наличие листа в книге\nпроверить наличие листа в файле\ncheck if sheet exist\ncheck if worksheet exist","usage":"Sub Example()\n    Debug.Print (IsWsExists(ThisWorkbook, \"Sheet1\")) ' True, если лист существует\nEnd Sub","file":"13.bas"},{"id":"14","category":["Пользовательский ввод"],"name":"VerifyPassword","title":"Запрос на ввод пароля и его проверка","description":"Ф-ция запрашивает ввода пароля и проверяет его корректность","_keywords":"ввод пароля\nпроверить пароль\nverify password input\ncheck password input","usage":"Sub Example()\n    If VerifyPassword() Then\n        Debug.Print (\"Продолжаем выполнение\")\n    Else\n        Debug.Print (\"Отмена операции\")\n    End If\nEnd Sub","file":"14.bas"},{"id":"15","category":["Работа с датой / временем"],"name":"GetDateSeparator","title":"Получить разделитель даты в зависимости от локали у пользователя","description":"Ф-ция возвращает текущий разделитель дат в зависимости от региональных настроек пользователя","_keywords":"получить разделитель дат\nget date separator\nget date delimiter","usage":"Sub Example()\n    Dim separator$: separator = GetDateSeparator()\n    Debug.Print (separator) ' точка / слеш\nEnd Sub","file":"15.bas"},{"id":"16","category":["Работа с датой / временем"],"name":"GetMonthByNum","title":"Получить название месяца по его порядковому номеру в году","description":"Ф-ция возвращает название месяца в формате \"mmmm\" по номеру месяца в году","_keywords":"получить имя месяца по номеру\nполучить название месяца по номеру\nget month by index\nget month by number\nget month name by index\nget month name by number","usage":"Sub Example()\n    Debug.Print (GetMonthByNum(5)) ' Май\nEnd Sub","file":"16.bas"},{"id":"17","category":["Работа с датой / временем"],"name":"GetMonthByName","title":"Получить порядковый номер месяца по его названию","description":"Ф-ция возвращает порядковый номер месяца в году по его имени","_keywords":"получить номер месяца по имени\nполучить индекс месяца по имени\nget month index by name\nget month number by name","usage":"Sub Example()\n    Debug.Print (GetMonthByName(\"Май\")) ' 5\nEnd Sub","file":"17.bas"},{"id":"18","category":["Работа с датой / временем"],"name":"GetWeekdayName","title":"Получить название дня недели по дате","description":"Ф-ция возвращает название дня недели по дате","_keywords":"получить день недели по дате\nполучить номер дня недели по дате\nget weekday by date\nget day name by date","usage":"Sub Example()\n    Dim weekdayName$: weekdayName = GetWeekdayName(CDate(\"11.07.2022\"))\n    Debug.Print (weekdayName) ' понедельник\nEnd Sub","file":"18.bas"},{"id":"19","category":["Работа с датой / временем"],"name":"GetWeekNumByDate","title":"Получить номер недели по дате","description":"Ф-ция возвращает номер недели по дате","_keywords":"получить номер недели по дате\nget week index by date\nget week number by date","usage":"Sub Example()\n    Dim weekNum&: weekNum = GetWeekNumByDate(CDate(\"11.07.2022\"))\n    Debug.Print (weekNum) ' 29\nEnd Sub","file":"19.bas"},{"id":"20","category":["Работа с датой / временем"],"name":"GetDateByDayNum","title":"Получить дату в указанном формате по порядковому номеру дня в году","description":"Ф-ция возвращает дату в заданном формате по порядковому номеру дня в году","_keywords":"получить дату по номеру дня в году\nget date by day index\nget date by day number","usage":"Sub Example()\n    Dim num&: num = 32\n    Dim year&: year = 2022\n    Dim d As Date: d = CStr(GetDateByDayNum(num, year, \"dd.mm.yyyy\"))\n    Debug.Print (d) ' 01.02.2022\nEnd Sub","file":"20.bas"},{"id":"21","category":["Конвертация","Работа с датой / временем"],"name":"UnixTime2ExcelDate","title":"Конвертировать Unix 13-digit time string в дату Excel","description":"Ф-ция конвертирует Unix 13-digit time string в Excel дату","_keywords":"конвертировать unix time в дату\nконвертация unix time в дату\nконвертировать юникс время в дату\nконвертация юникс время в дату\nconvert unix time to date","usage":"Sub Example()\n    Dim d As Date: d = UnixTime2ExcelDate(\"1443852054000\")\n    Debug.Print (d) ' 03.10.2015 6:00:54\nEnd Sub","file":"21.bas"},{"id":"22","category":["Файловая система"],"name":"CreateFolder","title":"Создать новую папку","description":"Ф-ция создает папку в дирректории dirPath с именем dirName, если она не существует","_keywords":"создать папку\nсоздать дирректорию\ncreate folder\ncreate directory","usage":"Sub Example()\n    Dim hasCreated As Boolean\n    hasCreated = CreateFolder(ThisWorkbook.path, \"New folder\")\n    Debug.Print (hasCreated) ' True\nEnd Sub","file":"22.bas"},{"id":"23","category":["Файловая система","Пользовательский ввод"],"name":"GetFilePaths","title":"Получить путь до выбранного в диалоговом окне файла / файлов","description":"Ф-ция открывает окно для выбора файлов\nВозвращает массив с путями к выбранным файлам\nЕсли ничего не выбрано вернет пустой массив","_keywords":"получить путь к файлу\nвыбрать файл в диалоговом окне\nget file path from dialog\nselect file\nchoose file","usage":"Sub Example()\n    Dim allowMulti As Boolean: allowMulti = True\n    Dim paths() As String\n    paths = GetFilePaths(\"Выбери файлы\", \"*.xlsm; *.xlsb\", , allowMulti)\n    Debug.Print (paths(0)) ' путь к 1-му файл\n    Debug.Print (paths(1)) ' путь ко 2-му файлу\nEnd Sub","file":"23.bas"},{"id":"24","category":["Готовые макросы"],"name":"ExportVBProject","title":"Сохранить VBProject из текущего файла в новую папку macros","description":"Ф-ция экспортирует VBProject файлы из выбранного Excel файла в папку с указанным именем","_keywords":"сохранить VB проект\nэкспортировать VB\nсохранить макрос\nэкспортировать макрос\nsave VB project\nexport VB project\nsave VBA\nexport VBA","usage":"Sub Example()\n    Call ExportVBProject(\"macros\")\nEnd Sub","file":"24.bas"},{"id":"25","category":["Файловая система","Пользовательский ввод"],"name":"GetFolderPath","title":"Получить путь до выбранной в диалоговом окне папки","description":"Ф-ция открывает окно для выбора папки\nВозвращает путь к выбранной папке","_keywords":"получить путь к папке\nвыбрать папку в диалоговом окне\nget folder path from dialog\nget directory path from dialog\nselect folder\nchoose folder\nselect directory\nchoose directory","usage":"Sub Example()\n    Dim path$: path = GetFolderPath(\"Выбери папку\")\n    Debug.Print (path)\nEnd Sub","file":"25.bas"},{"id":"26","category":["Файловая система"],"name":"ReadTxtFile","title":"Получить содержимое txt файла","description":"Ф-ция считывает txt файл и возвращает его содержимое","_keywords":"получить содержимое файла\nполучить содержимое txt файла\nпрочитать файл\nпрочитать txt файл\nread file\nread txt file","usage":"Sub Example()\n    Dim content$: content = ReadTxtFile(\"C:\\folder\\filename.txt\")\n    Debug.Print (content)\nEnd Sub","file":"26.bas"},{"id":"27","category":["Файловая система"],"name":"ReadTxtFile","title":"Получить содержимое txt файла в определенной кодировке","description":"Ф-ция считывает txt файл в указанной кодировке и Возвращает его содержимое","_keywords":"получить содержимое файла в определенной кодировке\nполучить содержимое txt файла в определенной кодировке\nпрочитать файл в определенной кодировке\nпрочитать txt файл в определенной кодировке\nread file in particular encoding\nread txt file in particular encoding","usage":"Sub Example()\n    Dim content$: content = ReadTxtFile(\"C:\\folder\\filename.txt\", \"windows-1251\")\n    Debug.Print (content)\nEnd Sub","file":"27.bas"},{"id":"28","category":["Файловая система"],"name":"SaveToTxtFile","title":"Сохранить текст в txt файл в указанной папке","description":"Ф-ция сохраняет текст в txt файл","_keywords":"сохранить текст в файл\nсохранить текст в txt файл\nзаписать текст в файл\nзаписать текст в txt файл\nwrite text to file\nwrite text to txt file","usage":"Sub Example()\n    Call SaveToTxtFile(\"текст\", ThisWorkbook.Path, \"filename.txt\", \"windows-1251\")\nEnd Sub","file":"28.bas"},{"id":"29","category":["Файловая система"],"name":"GetFileNameFromPath","title":"Получить имя файла с расширением (fileName.ext) из пути к нему","description":"Ф-ция возвращает имя файла с расширением (fileName.ext) из пути к нему","_keywords":"получить имя файла из пути к нему\nизвлечь имя файла из пути к нему\nget file name form path","usage":"Sub Example()\n    Debug.Print (GetFileNameFromPath(\"C:\\folder\\filename.txt\")) ' filename.txt\nEnd Sub","file":"29.bas"},{"id":"30","category":["Форматирование"],"name":"AddRngBorders","title":"Добавить границы у диапазона","description":"Ф-ция добавляет границы у диапазона rng","_keywords":"добавить границы у диапазона\nдобавить границы ячейке\nadd borders to range\nadd borders to cell","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"A1:B3\")\n    Call AddRngBorders(rng)\nEnd Sub","file":"30.bas"},{"id":"31","category":["Форматирование"],"name":"CheckIfRngColored","title":"Проверить окрашен ли диапазон (цвет заливки и текста ≠ дефолт)","description":"Ф-ция проверят окрашен ли диапазон (цвет заливки и цвет текста <> дефолт)","_keywords":"проверить окрашен ли диапазон\nпроверить цвет заливки\nпроверить цвет текста\nпроверить дефолт\ncheck if range has not default color\ncheck if cell has not default color\ncheck if range colored\ncheck if cell colored","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"A1\")\n    Debug.Print (CheckIfRngColored(rng)) ' True, если цвет текста или фона <> дефолт\nEnd Sub","file":"31.bas"},{"id":"32","category":["Форматирование"],"name":"SetRngFontColor","title":"Изменить цвет текста у диапазона","description":"Ф-ция устанавливает цвет текста у rng","_keywords":"покрасить текст в диапазоне\nпокрасить текст в ячейке\nset font color in range\nset text color in range\nset font color in cell\nset text color in cell","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"A1\")\n    Call SetRngFontColor(rng, \"#9dbc9a\")\nEnd Sub","file":"32.bas"},{"id":"33","category":["Форматирование"],"name":"SetRngBackColor","title":"Изменить цвет фона у диапазона","description":"Ф-ция устанавливает цвет заливки у rng","_keywords":"изменить фон диапазона\nизменить фон ячейки\nset fore color in range\nset fore color in cell\nset background color in range\nset background color in cell","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"A1\")\n    Call SetRngBackColor(rng, \"#9dbc9a\")\nEnd Sub","file":"33.bas"},{"id":"34","category":["Форматирование"],"name":"CopyRowFormatting","title":"Скопировать формат из строки и применить к диапазону строк (от… до …)","description":"Ф-ция копирует формат из строки fromRow на диапазон строк с targerRowFrom по targerRowTo","_keywords":"копировать формат строки\ncopy row formatting\ncopy rows formatting","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    ' на 1 листе копируем формат с 1 строки на 2 - 4 строки\n    Call CopyRowFormatting(ws, 1, ws, 2, 4)\nEnd Sub","file":"34.bas"},{"id":"35","category":["Форматирование"],"name":"CopyColFormatting","title":"Скопировать формат из столбца и применить к диапазону столбцов (от… до …)","description":"Ф-ция копирует формат из столбца fromCol на диапазон столбов с targerColFrom по targerColTo","_keywords":"копировать формат столбца\nкопировать формат колонки\ncopy column formatting\ncopy columns formatting","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    ' на 1 листе копируем формат с 1 столбца на 2 - 4 столбцы\n    Call CopyColFormatting(ws, 1, ws, 2, 4)\nEnd Sub","file":"35.bas"},{"id":"36","category":["Форматирование"],"name":"CheckRngBackColor","title":"Проверить окрашел ли диапазон в определенный цвет","description":"Ф-ция проверяет покрашен ли rng в указанный цвет","_keywords":"проверить окрашен ли диапазон\nпроверить цвет заливки\ncheck if range colored\ncheck range color\ncheck range background color\ncheck cell color\ncheck cell background color","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"A1\")\n    Debug.Print (CheckRngBackColor(rng, \"#9dbc9a\")) ' True, если фон покрашен в #9dbc9a\nEnd Sub","file":"36.bas"},{"id":"37","category":["Конвертация","Форматирование"],"name":"Rgb2Long","title":"Конвертировать цвет из RGB в Long формат Excel","description":"Ф-ция возвращает значение RGB цвета в Long формате","_keywords":"конвертировать rgb в long\nконвертация rgb в long\nконвертировать rgb в number\nконвертация rgb в number\nconvert rgb to long\nconvert rgb to number","usage":"Sub Example()\n    Debug.Print (Rgb2Long(157, 188, 154)) ' 10140829\nEnd Sub","file":"37.bas"},{"id":"38","category":["Конвертация","Форматирование"],"name":"Hex2Rgb","title":"Конвертировать цвет из HEX в RGB формат","description":"Ф-ция конвертирует HEX в RGB long value","_keywords":"конвертировать hex в rgb\nconvert hex to rgb","usage":"Sub Example()\n    Debug.Print (Hex2Rgb(\"#9dbc9a\")) ' 10140829\nEnd Sub","file":"38.bas"},{"id":"39","category":["Работа с формами"],"name":"GetSelectedRadioBtn","title":"Получить выбранную радиокнопку по имени ее родителя (frame)","description":"Ф-ция находит и возвращает выбранную radio button по имени ее родителя frameName","_keywords":"получить выбранную радиокнопку\nнайти выбранную радиокнопку\nнайти выбранный переключатель\nget selected radiobutton in frame\nget selected radiobutton in form\nget active radiobutton in frame\nget active radiobutton in form","usage":"Private Sub CommandButton1_Click()\n    Dim radio As MSforms.OptionButton: Set radio = GetSelectedRadioBtn(\"Frame1\")\n    Debug.Print (radio.Name)\n    Unload Me\nEnd Sub","file":"39.bas"},{"id":"40","category":["HTTP"],"name":"HtppQuery","title":"Выполнить HTTP запрос на url и получить body ответа","description":"Ф-ция выполняет HTTP запрос","_keywords":"выполнить http запрос к API\nвыполнить сетевой запрос к API\nhttp query to API\nget post http query","usage":"Sub Example()\n    Const API_URL$ = \"https://jsonplaceholder.typicode.com/todos\"\n    Dim json As Object, item As Object\n        \n    Set json = HttpQuery(\"GET\", API_URL, \"application/json\")\n\n    If json Is Nothing Or json.Count = 0 Then\n        Debug.Print (\"Empty response\")\n        Exit Sub\n    End If\n    \n    If TypeName(json) = \"Collection\" Then\n        For Each item In json\n            Debug.Print (\"ID: \" & item(\"id\") & \", Title: \" & item(\"title\") & \", Done: \" & item(\"completed\"))\n        Next item\n    ElseIf TypeName(json) = \"Dictionary\" Then\n        Debug.Print (\"ID: \" & json(\"id\") & \", Title: \" & json(\"title\") & \", Done: \" & json(\"completed\"))\n    End If\nEnd Sub","file":"40.bas"},{"id":"41","category":["Интерфейс Excel"],"name":"ShowInterface","title":"Скрыть / показать пользовательский интерфейс Excel","description":"Ф-ция скрывает / показывает пользовательский интерфейс Excel","_keywords":"скрыть интерфейс\nпоказать интерфейс\nhide interface\nshow interface","usage":"Sub Example()\n    Call ShowInterface(False)\nEnd Sub","file":"41.bas"},{"id":"42","category":["Конвертация","JSON","Готовые макросы"],"name":"JsonConverter","title":"Конвертация и парсинг JSON для VBA","description":"https://github.com/VBA-tools/VBA-JSON","_keywords":"конвертировать json\nконвертация json\nпарсинг json","usage":"","file":"42.bas"},{"id":"43","category":["Интерфейс Excel","Оптимизация"],"name":"ShowProcessing","title":"Показать / скрыть сообщение о выполнении операции в статус баре Excel","description":"Ф-ция показывает / скрывает сообщение о выполнении операции в статус баре Excel","_keywords":"скрыть сообщение\nпоказать сообщение\nстатус-бар\nhide message\nshow message\nstatus-bar","usage":"Sub Example()\n    Call ShowProcessing(True) '\n    ' ... выполняем задачу\n    Call ShowProcessing(False)\nEnd Sub","file":"43.bas"},{"id":"44","category":["Файловая система"],"name":"LogInfo","title":"Запись в логфайл сообщения с указанием текущей даты и времени\n\nЗапись в логфайл сообщения в об ошибке  с указанием текущей даты и времени и вывод его на экран для пользователя","description":"Ф-ция записывает сообщение в логфайл с указанием даты и времени","_keywords":"логгирование\nзапись сообщения в лог файл\nзаписать сообщение в лог файл\nwrite message to log\nlog message","usage":"Sub Example()\n    Call LogInfo(\"Выполнено действие X\")\n    ' ...\n    Call LogInfo(\"Выполнено действие Y\")\nEnd Sub","file":"44.bas"},{"id":"45","category":["Outlook"],"name":"GetCurrentUserEmail","title":"Получить email текущего пользователя (для Outlook)","description":"Ф-ция возвращает email текущего пользователя в Outlook","_keywords":"получить адрес почты\nполучить email адрес текущего пользователя\nget email\nget current user email","usage":"Sub Example()\n    Debug.Print (GetCurrentUserEmail()) ' user@domain.com\nEnd Sub","file":"45.bas"},{"id":"46","category":["Outlook"],"name":"SendEmail","title":"Отправить письмо в Outlook","description":"Ф-ция отправляет письмо в Outlook","_keywords":"отправить письмо\nотправить email\nsend email\ncreate email","usage":"Sub Example()\n    Dim sendTo$: sendTo = \"user1@domain.com; user2@domain.com\"\n    Dim method$: method = \"Показать\"\n    Call SendEmail(\"Тема\", \"Тело\", sendTo, , , method)\nEnd Sub","file":"46.bas"},{"id":"47","category":["Outlook"],"name":"CreateAppointment","title":"Создать событие в календаре Outlook","description":"Ф-ция создает в календаре текущего пользователя новое событие","_keywords":"создать событие в календаре\nсоздать событие в календаре\ncreate appointment in calendar\ncreate event in calendar","usage":"Sub Example()\n    Dim startDate As Date: startDate = CDate(\"12.07.2022\")\n    Dim recurrenceType$: recurrenceType = \"Monthly\"\n    Call CreateAppointment(\"Тема\", \"Тело\", startDate, recurrenceType)\nEnd Sub","file":"47.bas"},{"id":"48","category":["Конвертация","Работа с числами"],"name":"ConvertNumbersStoredAsText","title":"Конвертировать в числа Number stored as text в указанном диапазоне","description":"Ф-ция исправляет ошибку number stored as text, преобразую каждую ячейку в диапазоне в число","_keywords":"конвертировать текст в число\nконвертация текст в число\nconvert number stored as text","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"A1:B3\")\n    Call ConvertNumbersStoredAsText(rng)\nEnd Sub","file":"48.bas"},{"id":"49","category":["Работа с числами"],"name":"Round","title":"Округлить переданное дробное число с указанной точностью","description":"Ф-ция округляет переданное дробное число number до N знаков после разделителя","_keywords":"округлить число\nокругление числа\nдробь\nround number\nfloat double","usage":"Sub Example()\n    Debug.Print (Round(4.4, 0)) ' 4\n    Debug.Print (Round(4.8, 0)) ' 5\n    Debug.Print (Round(4.226, 2)) ' 4.23\n    Debug.Print (Round(4.45, 1)) ' 4.5\nEnd Sub","file":"49.bas"},{"id":"50","category":["Работа с числами"],"name":"GetMaxValue","title":"Получить максимальное значение из 2-х","description":"Ф-ция возвращает максимальное значение из 2-х","_keywords":"получить максимальное значение\nget maximum","usage":"Sub Example()\n    Debug.Print (GetMaxValue(-5, 6)) ' 6\n    Debug.Print (GetMaxValue(4.45, 4.5)) ' 4.5\nEnd Sub","file":"50.bas"},{"id":"51","category":["Интерфейс Excel","Оптимизация"],"name":"TurnUpdatesOn","title":"Выкл / вкл обновление экрана, пересчет формул, события, статус-бар, алерты","description":"Ф-ция вкл / выкл обновление экрана, пересчет формул, события, статус-бар, алерты","_keywords":"отключить обновление\nвключить обновление\nturn updates on\nturn updates off\nturn on turn off","usage":"Sub Example()\n    Call TurnUpdatesOn(False)\n    ' ...\n    Call TurnUpdatesOn(True)\nEnd Sub","file":"51.bas"},{"id":"52","category":["Заметки"],"name":"FitComments","title":"Ресайз всех заметок (Notes) на листе","description":"Ф-ция подгоняет размер комментариев на листе под их содержимое","_keywords":"ресайз комментариев\nresize comments\nfit comments","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    Call FitComments(ws)\nEnd Sub","file":"52.bas"},{"id":"53","category":["Data Validation","Dropdown"],"name":"HasValidation","title":"Проверить наличие Data Validation в диапазоне","description":"Ф-ция проверяет наличие Data  Validation в ячейке","_keywords":"проверить наличие валидации в диапазоне\nпроверить наличие валидации в ячейке\ncheck if range has data validation\ncheck if cell has data validation\ncheck data validation","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"A1\")\n    Debug.Print (HasValidation(rng)) ' True, если установлена проверка данных\nEnd Sub","file":"53.bas"},{"id":"54","category":["Фильтры"],"name":"RemoveFilters","title":"Снять все фильтры с указанного листа","description":"Ф-ция снимает установленные фильтры с листа","_keywords":"снять фильтры с листа\nremove filters\nturn filters off\nturn off filters","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    Call RemoveFilters(ws)\nEnd Sub","file":"54.bas"},{"id":"55","category":["Фильтры"],"name":"TurnFiltersOn","title":"Вкл фильтры в указанном диапазоне","description":"Ф-ция активирует фильтры на листе","_keywords":"включить фильтры\nактивировать фильтры\nturn filters on\nturn on filters","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    Dim headerRow&: headerRow = 1\n    Call TurnFiltersOn(ws, headerRow)\nEnd Sub","file":"55.bas"},{"id":"56","category":["Data Validation","Dropdown"],"name":"SetDropDownList","title":"Установить в диапазоне выпадающий список (Data Validation Allow=List)","description":"Ф-ция устанавливает для rng Data Validation с типом List (source = listName)","_keywords":"установить выпадающий список\nset dropdown list\nset list\nadd dropdown\nadd list","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"A1\")\n    Call SetDropDownList(rng, \"да,нет\") ' список вариантов через ,\n    Call SetDropDownList(rng, \"my_list\") ' имя из диспетчера имен\nEnd Sub","file":"56.bas"},{"id":"57","category":["Формулы"],"name":"CopyRowFormulas","title":"Скопировать формулы из строки и применить к  диапазону строк (от… до …)","description":"Ф-ция копирует формулы из строки fromRow (колонки с fromCol по toCol) на строки с targerRowFrom по targerRowTo","_keywords":"копировать формулы из строки\nкопировать формулы в строке\ncopy row formulas\ncopy rows formulas","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    ' на 1 листе копируем формулы из 1 строки в 2 - 4 строки с 3-го по 4-й столбец\n    Call CopyRowFormulas(ws, 1, 2, 4, 3, 4)\nEnd Sub","file":"57.bas"},{"id":"58","category":["Power Query"],"name":"RefreshPQ","title":"Обновить Power Query запрос по имени query","description":"Ф-ция обновляет Power Query запрос с именем queryName","_keywords":"обновить запрос Power Query\nrefresh query\nrefresh Power Query\nupdate query\nupdate Power Query","usage":"Sub Example()\n    Call RefreshPQ(\"query_name\")\nEnd Sub","file":"58.bas"},{"id":"59","category":["Работа с книгами / листами"],"name":"[Un]ProtectWs","title":"Снять / установить пароль с листа","description":"Ф-ция снимает / ставит пароль с / на лист","_keywords":"снять защиту с листа\nснять пароль с листа\nустановить пароль на лист\nprotect sheet\nprotect worksheet\nunprotect sheet\nunprotect worksheet","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    Call ProtectWs(ws, \"qwerty\")\n    ' …\n    Call UnProtectWs(ws, \"qwerty\")\nEnd Sub","file":"59.bas"},{"id":"60","category":["Регулярные выражения"],"name":"RegExpExtract","title":"Проверить текст регулярным выражением, получить коллекцию совпадений","description":"Ф-ция проверяет текст с помощью регулярного выражения\nВозвращает объект-коллекцию со всеми совпадениями","_keywords":"проверить текст регулярным выражением\nпроверить текст регуляркой\ncheck text by regular expression\ncheck text by regexp\ncheck text using regular expression\ncheck text using regexp","usage":"Sub Example()\n    Dim text$: text = \"user1@domain2.com; user2@domain2.com; user3@domain1.com\"\n    Dim pattern$: pattern = \"\\w+@domain2\\.\\w+\"\n    Dim coll As Object: Set coll = RegExpExtract(text, pattern)\n    Debug.Print (coll(0)) ' user1@domain2.com\n    Debug.Print (coll(1)) ' user2@domain2.com\nEnd Sub","file":"60.bas"},{"id":"61","category":["Регулярные выражения"],"name":"RegExpTest","title":"Проверить текст регулярным выражением (True / False)","description":"Ф-ция проверяет текст с помощью регулярного выражения\nВозвращает True, если текст соответствует паттерну","_keywords":"проверить текст регулярным выражением\nпроверить текст регуляркой\ncheck text by regular expression\ncheck text by regexp\ncheck text using regular expression\ncheck text using regexp","usage":"Sub Example()\n    Dim text$: text = \"user1@domain1.com\"\n    Dim pattern$: pattern = \"\\w+@domain1\\.\\w+\"\n    Debug.Print (RegExpTest(text, pattern)) ' True\nEnd Sub","file":"61.bas"},{"id":"62","category":["Регулярные выражения"],"name":"GetFirstRegExpMatch","title":"Проверить текст регулярным выражением, получить 1-ое совпадение","description":"Ф-ция проверяет текст с помощью регулярного выражения\nВозвращает первое соответствие текста паттерну","_keywords":"проверить текст регулярным выражением\nпроверить текст регуляркой\ncheck text by regular expression\ncheck text by regexp\ncheck text using regular expression\ncheck text using regexp","usage":"Sub Example()\n    Dim text$: text = \"user1@domain2.com; user2@domain2.com; user3@domain1.com\"\n    Dim pattern$: pattern = \"\\w+@domain2\\.\\w+\"\n    Debug.Print (GetFirstRegExpMatch(text, pattern)) ' user1@domain2.com\nEnd Sub","file":"62.bas"},{"id":"63","category":["Строки и столбцы"],"name":"GetColumnLeterByNum","title":"Получить букву столбца по его порядковому номеру","description":"Ф-ция возвращает букву столбца по его номеру","_keywords":"получить букву по номеру колонки\nполучить букву по номеру столбца\nполучить букву по индексу колонки\nполучить букву по индексу столбца\nget column char by column index\nget column char by column number\nget column letter by column index\nget column letter by column number","usage":"Sub Example()\n    Debug.Print (GetColumnLeterByNum(1)) ' A\n    Debug.Print (GetColumnLeterByNum(3)) ' C\n    Debug.Print (GetColumnLeterByNum(8)) ' H\nEnd Sub","file":"63.bas"},{"id":"64","category":["Строки и столбцы"],"name":"GetLastRow","title":"Получить номер последней не пустой строки в колонке","description":"Ф-ция возвращает номер последней не пустой строки по номеру колонки","_keywords":"получить последнюю строку по номеру колонки\nнайти последнюю строку по номеру колонки\nполучить последнюю строку по индексу колонки\nнайти последнюю строку по индексу колонки\nполучить последнюю строку по номеру столбца\nнайти последнюю строку по номеру столбца\nполучить последнюю строку по индексу столбца\nнайти последнюю строку по индексу столбца\nget last row by column index\nget last row by column number\nfind last row by column index\nfind last row by column number","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    ' номер последней не пустой строки в 1 столбце на листе ws\n    Debug.Print (GetLastRow(ws, 1)) ' 105\nEnd Sub","file":"64.bas"},{"id":"65","category":["Строки и столбцы"],"name":"GetLastColumn","title":"Получить номер последнего не пустого столбца в строке","description":"Ф-ция возвращает номер последней не пустой колонки по номеру строки","_keywords":"получить последнюю колонку по номеру строки\nнайти последнюю колонку по номеру строки\nполучить последнюю колонку по индексу строки\nнайти последнюю колонку по индексу строки\nполучить последнюю колонку по номеру строки\nнайти последнюю колонку по номеру строки\nполучить последнюю колонку по индексу строки\nнайти последнюю колонку по индексу строки\nполучить последний столбец по номеру строки\nнайти последний столбец по номеру строки\nполучить последний столбец по индексу строки\nнайти последний столбец по индексу строки\nполучить последний столбец по номеру строки\nнайти последний столбец по номеру строки\nполучить последний столбец по индексу строки\nнайти последний столбец по индексу строки\nget last column by row index\nget last column by row number\nfind last column by row index\nfind last column by row number","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    ' номер последнего не пустого столбца в 1 строке на листе ws\n    Debug.Print (GetLastColumn(ws, 1)) ' 8\nEnd Sub","file":"65.bas"},{"id":"66","category":["Строки и столбцы"],"name":"GetRowsFromRange","title":"Получить номера крайних строк в выбранном диапазоне (от … до …)","description":"Ф-ция возвращает массив из двух значений: 0 - первая строка rng, 1 - последняя строка rng","_keywords":"получить номера крайних строк в диапазоне\nполучить индексы крайних строк в диапазоне\nнайти номера крайних строк в диапазоне\nнайти индексы крайних строк в диапазоне\nfind first row number in range\nfind last row number in range\nfind first row index in range\nfind last row index in range","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"A1:B3\")\n    Dim arr() As Long: arr = GetRowsFromRange(rng)\n    Debug.Print (arr(0)) ' 1\n    Debug.Print (arr(1)) ' 3\nEnd Sub","file":"66.bas"},{"id":"67","category":["Строки и столбцы"],"name":"GetColumnByHeader","title":"Получить номер столбца по содержимому ячейки в указанной строке","description":"Ф-ция возвращает номер столбца, в котором был найден заголовок headerValue в строке headerRow","_keywords":"получить номер столбца\nполучить индекс столбца\nнайти номер столбца\nнайти индекс столбца\nполучить номер колонки\nполучить индекс колонки\nнайти номер колонки\nнайти индекс колонки\nget column number\nget column index\nfind column number\nfind column index","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    Dim headerRow&: headerRow = 1\n    Debug.Print (GetColumnByHeader(ws, \"Итого\", headerRow)) ' 4\nEnd Sub","file":"67.bas"},{"id":"68","category":["Строки и столбцы"],"name":"GetRowByHeader","title":"Получить номер строки по содержимому ячейки в указанном столбце","description":"Ф-ция возвращает номер строки, в которой был найден заголовок headerValue в столбце headerCol","_keywords":"получить номер строки\nполучить индекс строки\nнайти номер строки\nнайти индекс строки\nget row number\nget row index\nfind row number\nfind row index","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    Dim headerCol&: headerCol = 1\n    Debug.Print (GetRowByHeader(ws, \"Итого\", headerCol)) ' 4\nEnd Sub","file":"68.bas"},{"id":"69","category":["Работа с текстом"],"name":"Includes","title":"Проверить вхождение подстроки в исходную строку","description":"Ф-ция проверят вхождение подстроки в строку","_keywords":"проверить вхождение подстроки\nпроверить наличие подстроки\ncheck if string includes substring\ncheck if string includes another string","usage":"Sub Example()\n    Debug.Print (Includes(\"username@domain.com\", \"username\")) ' True\nEnd Sub","file":"69.bas"},{"id":"70","category":["Работа с текстом"],"name":"GetFirstWordAfter","title":"Получить первое слово в строке после искомого слова","description":"Ф-ция возвращает первое слово в строке после искомого слова","_keywords":"получить первое слово после\nнайти первое слово после\nget first word after\nfind first word after","usage":"Sub Example()\n    Debug.Print (GetFirstWordAfter(\"люблю\", \"Я люблю яблоки\")) ' яблоки\nEnd Sub","file":"70.bas"},{"id":"71","category":["Работа с текстом","Массивы"],"name":"SplitToChars","title":"Разделить строку на массив символов","description":"Ф-ция разбивает строку на массив символов","_keywords":"разделить строку на символы\nразбить строку на символы\nsplit string to symbols\nsplit string to chars\nsplit string to characters","usage":"Sub Example()\n    Dim arr() As String: arr = SplitToChars(\"яблоко\")\n    Debug.Print (Join(arr, \", \")) ' я, б, л, о, к, о\nEnd Sub","file":"71.bas"},{"id":"72","category":["Работа с текстом"],"name":"SliceString","title":"Извлечь подстроку из исходной строки","description":"Ф-ция извлекает подстроку из строки начиная с beginIndex и заканчивая endIndex (нумерация начинается с 1)","_keywords":"извлечь подстроку\nизвлечить строку из другой строки\nslice string\nfind substring\nget substring","usage":"Sub Example()\n    Debug.Print (SliceString(\"Я люблю яблоки\", 3, 8)) ' люблю\n    Debug.Print (SliceString(\"Я люблю яблоки\", 9)) ' яблоки\nEnd Sub","file":"72.bas"},{"id":"73","category":["Конвертация","Работа с текстом"],"name":"Rng2String","title":"Конвертация диапазона в текстовую строку","description":"Ф-ция склеивает диапазон в текстовую строку через разделитель","_keywords":"конвертация диапазона в текст\nконвертировать диапазон в текст\nконвертация диапазона в строку\nконвертировать диапазон в строку\nconvert range to text\nconvert range to string","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"A1:C1\")\n    Debug.Print (Rng2String(rng, \", \")) ' Номер, Продукт, Итого\nEnd Sub","file":"73.bas"},{"id":"74","category":["Работа с текстом"],"name":"ReplaceAll","title":"Заменить все вхождения подстроки в исходную строку","description":"Ф-ция выполняет замену всех соответствий паттерну в строке","_keywords":"заменить все\nзаменить всё\nreplace all","usage":"Sub Example()\n    Debug.Print (ReplaceAll(\"Зашифр@ванн@е сл@в@\", \"@\", \"о\")) ' Зашифрованное слово\nEnd Sub","file":"74.bas"},{"id":"75","category":["Готовые макросы"],"name":"RunTimer / StopTimer","title":"Запустить / остановить таймер","description":"Подсчет времени выполнения ф-ций / процедур","_keywords":"запуск таймера\nостановить таймер\nвремя выполнения\nrun timer\nstop timer\nexecution time","usage":"Sub Example()\n    Call RunTimer\n    ' ...\n    Application.Wait (Now + TimeValue(\"00:00:05\"))\n    ' ...\n    Debug.Print (\"Время выполнения скрипта: \" & StopTimer())\nEnd Sub","file":"75.bas"},{"id":"76","category":["Готовые макросы","User Defined Functions (UDF)"],"name":"CONCATENATEIF","title":"Конкатенация по условию","description":"Аналог встроенной ф-ции CONCATENATE, но с возможностью задать условие конкатенации","_keywords":"специть если\nконкатенация по условию\nconcatenate if\nconcat if\nconditional concat","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"C1\")\n    rng.Formula = \"=CONCATENATEIF(Организации[Наименование],Организации[ИНН], \"ООО *\",\", \")\"\nEnd Sub\n","file":"76.bas"},{"id":"77","category":["Готовые макросы","User Defined Functions (UDF)"],"name":"GETWORKDAYS","title":"Получить кол-во дней между двумя датами за вычетом праздничных дней","description":"Ф-ция возвращает кол-во дней между 2-мя датами за вычетом праздничных дней","_keywords":"получить количество рабочих дней между датами\nвычислить кол-во рабочих дней между датами\nget workdays\nget dates diff","usage":"Sub Example()\n    Dim rng As Range: Set rng = ThisWorkbook.Sheets(1).Range(\"C1\")\n    rng.Formula = \"=GETWORKDAYS(\" & Cdate(\"30.01.2022\") & \", \" & Cdate(\"01.01.2022\") & \")\"\nEnd Sub\n","file":"77.bas"},{"id":"78","category":["Пользовательский ввод"],"name":"ValidateInput","title":"Показать окно с просьбой ввести текст с встроенной проверкой соответствия шаблону","description":"Ф-ция проверяет ввод пользователя и возвращает вводимые данные","_keywords":"проверка корректности ввода\nпроверка ввода на соответствие шаблону\ncheck if input valid\ncheck if input match pattern","usage":"Sub Example()\n    Dim inputDate$\n    inputDate = ValidateInput(\"Введите дату\", \"##.##.####\", \"дд.мм.гггг\", \"Соблюдайте формат\", Date)\nEnd Sub","file":"78.bas"},{"id":"79","category":["Готовые макросы"],"name":"PicturesExport","title":"Выгрузить все изображения с листа Excel в папку","description":"Ф-ция экспортирует все изображения с листа в указанную папку","_keywords":"выгрузить изображения\nвыгрузить картинки\nсохранить изображения\nсохранить картинки\nexport pictures\nexport images\nsave pictures\nsave images","usage":"Sub Example()\n    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets(1)\n    Dim pathToSave$: pathToSave = ThisWorkbook.Path & Application.PathSeparator & \"img\"\n    Call PicturesExport(ws, pathToSave)\nEnd Sub","file":"79.bas"},{"id":"80","category":["Готовые макросы"],"name":"CompareTables / ResetTables","title":"Сверить 2 одинаковые по структуре таблицы (одинаковые заголовки, кол-во и расположение столбцов)","description":"Сверка 2-х одинаковых по структуре таблиц\nРазница красится в красный, в комментарий проставляется diff сумма\nВозврат обеих таблиц в исходное состояние","_keywords":"сравнить таблицы\nсопоставить таблицы\ncompare tables","usage":"","file":"80.bas"},{"id":"81","category":["Конвертация","Массивы"],"name":"Collection2Array","title":"Конвертировать коллекцию в массив","description":"Ф-ция конвертирует коллекцию в массив","_keywords":"конвертация коллекции в массив\nконвертировать коллекцию в массив\nconvert collection to array","usage":"Sub Example()\n    Dim coll As New Collection\n    coll.Add item:=120, Key:=\"Company 1\"\n    coll.Add item:=210, Key:=\"Company 2\"\n    Dim arr() As String: arr = Collection2Array(coll)\n    Debug.Print (Join(arr, \", \")) ' 120, 210\nEnd Sub","file":"81.bas"},{"id":"82","category":["Готовые макросы","Dropdown","Работа с формами"],"name":"DropdownForm","title":"Кастомный выпадающий список с автокомплитом","description":"Быстрый поиск подходящего варианта из большого выпадающего списка, выбор варианта стрелками, табом","_keywords":"выпадающий список с автокомплитом\nвыпадающий список с автозаполнением\nвыпадающий список с поиском\ndropdown с автокомплитом\ndropdown с автозаполнением\ndropdown с поиском\ndropdown\ndropdown with autocomplete\nlist with autocomplete","usage":"Private Sub Worksheet_SelectionChange(ByVal Target As Range)\n    Dim isEmptyCell As Boolean\n    Dim isValidationSet As Boolean\n\n    isEmptyCell = CBool(Selection.Count = 1 And IsEmpty(Target))\n    isValidationSet = HasValidation(Target) ' @(id 53)\n\n    ' при выборе пустой ячейки с нативным dropdown (Data Validation, Allow = List)\n    ' показываем DropdownForm с вариантами из этого листа\n    If isEmptyCell And isValidationSet Then\n        If Target.Validation.Type = 3 Then DropdownForm.Show\n    End If\nEnd Sub","file":"82.zip"},{"id":"83","category":["Готовые макросы","Работа с формами","Оптимизация"],"name":"ProgressBar","title":"Прогресс бар","description":"Отображение % и сообщения о ходе выполнения тяжелой задачи","_keywords":"прогресс бар\nстатус выполнения\n% выполнения\nпроцент выполнения\nprogress bar","usage":"Sub Example()\n    Dim percents&:  percents = 0\n    percents = 1\n    Call ProgressBar.Update(percents, \"Начинаем...\")\n    ' ... делаем полезную работу\n    percents = 50\n    Call ProgressBar.Update(percents, \"В процессе...\")\n    ' ... делаем полезную работу\n    percents = 99\n    Call ProgressBar.Update(percents, \"Почти все...\")\n    ' ... делаем полезную работу\n    percents = 100\n    Call ProgressBar.Update(percents, \"Готово\")\n    Unload ProgressBar\nEnd Sub","file":"83.zip"}]